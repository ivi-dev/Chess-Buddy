{"ast":null,"code":"var _jsxFileName = \"/Users/iliyanvidev/Code/chess-move-parser/src/MovesHistory.js\";\nimport React from 'react';\nimport Move from './Move';\nimport './MovesHistory.css';\n\nclass MovesHistory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedMove: -1\n    };\n    this.selectMove = this.selectMove.bind(this);\n  }\n\n  selectMove(id) {\n    if (this.state.selectedMove !== id) {\n      this.setState({\n        selectedMove: id\n      });\n    } else this.setState({\n      selectedMove: -1\n    });\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      id: \"MovesHistory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.props.moves.map(move => React.createElement(Move, {\n      key: move.id,\n      notation: move.notation,\n      id: move.id,\n      side: move.side,\n      situation: move.situation,\n      selectMove: this.selectMove,\n      updateSituation: this.props.updateSituation,\n      selected: this.state.selectedMove === move.id ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default MovesHistory;","map":{"version":3,"sources":["/Users/iliyanvidev/Code/chess-move-parser/src/MovesHistory.js"],"names":["React","Move","MovesHistory","Component","constructor","props","state","selectedMove","selectMove","bind","id","setState","render","moves","map","move","notation","side","situation","updateSituation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,oBAAP;;AAEA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,CAAC;AADN,KAAb;AAGA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDD,EAAAA,UAAU,CAACE,EAAD,EAAK;AACX,QAAI,KAAKJ,KAAL,CAAWC,YAAX,KAA4BG,EAAhC,EAAoC;AAChC,WAAKC,QAAL,CAAc;AAACJ,QAAAA,YAAY,EAAEG;AAAf,OAAd;AAEH,KAHD,MAKI,KAAKC,QAAL,CAAc;AAACJ,MAAAA,YAAY,EAAE,CAAC;AAAhB,KAAd;AACP;;AAEDK,EAAAA,MAAM,GAAG;AACL,WACI;AAAS,MAAA,EAAE,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKP,KAAL,CAAWQ,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IAAI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACL,EAAhB;AAAoB,MAAA,QAAQ,EAAEK,IAAI,CAACC,QAAnC;AAA6C,MAAA,EAAE,EAAED,IAAI,CAACL,EAAtD;AAA0D,MAAA,IAAI,EAAEK,IAAI,CAACE,IAArE;AAA2E,MAAA,SAAS,EAAEF,IAAI,CAACG,SAA3F;AACM,MAAA,UAAU,EAAE,KAAKV,UADvB;AACmC,MAAA,eAAe,EAAE,KAAKH,KAAL,CAAWc,eAD/D;AAEM,MAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWC,YAAX,KAA4BQ,IAAI,CAACL,EAAjC,GAAsC,IAAtC,GAA6C,KAF7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,CADL,CADJ;AAOH;;AA1BsC;;AA6B3C,eAAeR,YAAf","sourcesContent":["import React from 'react';\nimport Move from './Move'\nimport './MovesHistory.css';\n\nclass MovesHistory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedMove: -1\n        }\n        this.selectMove = this.selectMove.bind(this);\n    }\n\n    selectMove(id) {\n        if (this.state.selectedMove !== id) {\n            this.setState({selectedMove: id});\n            \n        }\n        else\n            this.setState({selectedMove: -1});\n    }\n\n    render() {\n        return (\n            <section id=\"MovesHistory\">\n                {this.props.moves.map(move => <Move key={move.id} notation={move.notation} id={move.id} side={move.side} situation={move.situation}\n                                                    selectMove={this.selectMove} updateSituation={this.props.updateSituation}\n                                                    selected={this.state.selectedMove === move.id ? true : false} />)}\n            </section>\n        );\n    }\n}\n\nexport default MovesHistory;"]},"metadata":{},"sourceType":"module"}