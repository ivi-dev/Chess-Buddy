{"ast":null,"code":"import _classCallCheck from\"/Users/iliyanvidev/Code/chess-buddy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/iliyanvidev/Code/chess-buddy/node_modules/@babel/runtime/helpers/esm/createClass\";import PouchDB from'pouchdb-browser';var Database=/*#__PURE__*/function(){function Database(){var dbName=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'chess-moves-parser';_classCallCheck(this,Database);this.db=new PouchDB(dbName,{auto_compaction:true});}_createClass(Database,[{key:\"configure\",value:function configure(onChange,onError){this.db.changes({live:true,since:'now'}).on('change',function(change){onChange();}).on('error',function(err){onError();});}},{key:\"insert\",value:function insert(doc,successCallback,errorCallback){this.db.put(doc).then(function(response){successCallback(response);}).catch(function(err){if(errorCallback)errorCallback(err);});}},{key:\"getAll\",value:function getAll(options,successCallback,errorCallback){this.db.allDocs(options).then(function(response){successCallback(response);}).catch(function(err){if(errorCallback)errorCallback(err);});}},{key:\"delete\",value:function _delete(id,successCallback,errorCallback){var self=this;this.db.get(id).then(function(doc){return self.db.remove(doc);}).then(function(res){successCallback(res);}).catch(function(err){if(errorCallback)errorCallback(err);});}}]);return Database;}();export default Database;","map":{"version":3,"sources":["/Users/iliyanvidev/Code/chess-buddy/src/Database.js"],"names":["PouchDB","Database","dbName","db","auto_compaction","onChange","onError","changes","live","since","on","change","err","doc","successCallback","errorCallback","put","then","response","catch","options","allDocs","id","self","get","remove","res"],"mappings":"0OAAA,MAAOA,CAAAA,OAAP,KAAoB,iBAApB,C,GAEMC,CAAAA,Q,yBACF,mBAA2C,IAA/BC,CAAAA,MAA+B,2DAAtB,oBAAsB,gCACvC,KAAKC,EAAL,CAAU,GAAIH,CAAAA,OAAJ,CAAYE,MAAZ,CAAoB,CAACE,eAAe,CAAE,IAAlB,CAApB,CAAV,CACH,C,iEAESC,Q,CAAUC,O,CAAS,CACzB,KAAKH,EAAL,CAAQI,OAAR,CAAgB,CACZC,IAAI,CAAE,IADM,CAEZC,KAAK,CAAE,KAFK,CAAhB,EAGGC,EAHH,CAGM,QAHN,CAGgB,SAAUC,MAAV,CAAkB,CAC9BN,QAAQ,GACX,CALD,EAKGK,EALH,CAKM,OALN,CAKe,SAAUE,GAAV,CAAe,CAC1BN,OAAO,GACV,CAPD,EAQH,C,sCAEMO,G,CAAKC,e,CAAiBC,a,CAAe,CACxC,KAAKZ,EAAL,CAAQa,GAAR,CAAYH,GAAZ,EAAiBI,IAAjB,CAAsB,SAAUC,QAAV,CAAoB,CACtCJ,eAAe,CAACI,QAAD,CAAf,CACH,CAFD,EAEGC,KAFH,CAES,SAAUP,GAAV,CAAe,CACpB,GAAIG,aAAJ,CAAmBA,aAAa,CAACH,GAAD,CAAb,CACtB,CAJD,EAKH,C,sCAEMQ,O,CAASN,e,CAAiBC,a,CAAe,CAC5C,KAAKZ,EAAL,CAAQkB,OAAR,CAAgBD,OAAhB,EAAyBH,IAAzB,CAA8B,SAAUC,QAAV,CAAoB,CAC9CJ,eAAe,CAACI,QAAD,CAAf,CACH,CAFD,EAEGC,KAFH,CAES,SAAUP,GAAV,CAAe,CACpB,GAAIG,aAAJ,CAAmBA,aAAa,CAACH,GAAD,CAAb,CACtB,CAJD,EAKH,C,uCAEMU,E,CAAIR,e,CAAiBC,a,CAAe,CACvC,GAAMQ,CAAAA,IAAI,CAAG,IAAb,CACA,KAAKpB,EAAL,CAAQqB,GAAR,CAAYF,EAAZ,EAAgBL,IAAhB,CAAqB,SAASJ,GAAT,CAAc,CAChC,MAAOU,CAAAA,IAAI,CAACpB,EAAL,CAAQsB,MAAR,CAAeZ,GAAf,CAAP,CACF,CAFD,EAEGI,IAFH,CAEQ,SAASS,GAAT,CAAc,CAClBZ,eAAe,CAACY,GAAD,CAAf,CACH,CAJD,EAIGP,KAJH,CAIS,SAAUP,GAAV,CAAe,CACpB,GAAIG,aAAJ,CAAmBA,aAAa,CAACH,GAAD,CAAb,CACtB,CAND,EAOH,C,wBAGL,cAAeX,CAAAA,QAAf","sourcesContent":["import PouchDB from 'pouchdb-browser';\n\nclass Database {\n    constructor(dbName = 'chess-moves-parser') {\n        this.db = new PouchDB(dbName, {auto_compaction: true});\n    }\n\n    configure(onChange, onError) {\n        this.db.changes({\n            live: true,\n            since: 'now'\n        }).on('change', function (change) {\n            onChange();\n        }).on('error', function (err) {\n            onError();\n        });\n    }\n\n    insert(doc, successCallback, errorCallback) {\n        this.db.put(doc).then(function (response) {\n            successCallback(response);\n        }).catch(function (err) {\n            if (errorCallback) errorCallback(err); \n        });\n    }\n\n    getAll(options, successCallback, errorCallback) {\n        this.db.allDocs(options).then(function (response) {\n            successCallback(response);\n        }).catch(function (err) {\n            if (errorCallback) errorCallback(err); \n        });\n    }\n\n    delete(id, successCallback, errorCallback) {\n        const self = this;\n        this.db.get(id).then(function(doc) {\n           return self.db.remove(doc);\n        }).then(function(res) {\n            successCallback(res);\n        }).catch(function (err) {\n            if (errorCallback) errorCallback(err); \n        });\n    }\n}\n\nexport default Database;"]},"metadata":{},"sourceType":"module"}