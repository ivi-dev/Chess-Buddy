{"ast":null,"code":"var _jsxFileName = \"/Users/iliyanvidev/Code/chess-move-parser/src/Board.js\";\nimport React from 'react';\nimport Row from './Row';\nimport './Board.css';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dimensions = {\n      width: 8,\n      height: 8\n    };\n    this.state = {\n      squares: [],\n      situation: []\n    };\n    this.prepareBoard = this.prepareBoard.bind(this);\n  }\n\n  componentDidMount() {\n    this.prepareBoard();\n  }\n\n  prepareBoard() {\n    let squareColor = 1,\n        squares = [];\n\n    for (let index = 0; index < this.dimensions.height; index++) {\n      let row = [];\n\n      for (let index = 0; index < this.dimensions.width; index++) {\n        row.push({\n          color: squareColor,\n          piece: null\n        });\n        if (index !== this.dimensions.width - 1) if (squareColor === 1) squareColor = 0;else squareColor = 1;\n      }\n\n      squares.push(row);\n    }\n\n    this.setState({\n      squares: squares\n    });\n    this.setState({\n      situation: squares\n    }, () => console.log(this.state.situation));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"Board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.squares.map((row, id) => React.createElement(Row, {\n      key: id,\n      squares: row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/iliyanvidev/Code/chess-move-parser/src/Board.js"],"names":["React","Row","Board","Component","constructor","props","dimensions","width","height","state","squares","situation","prepareBoard","bind","componentDidMount","squareColor","index","row","push","color","piece","setState","console","log","render","map","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkB;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAlB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,YAAL;AACH;;AAEDA,EAAAA,YAAY,GAAG;AACX,QAAIG,WAAW,GAAG,CAAlB;AAAA,QAAqBL,OAAO,GAAG,EAA/B;;AACA,SAAK,IAAIM,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKV,UAAL,CAAgBE,MAA5C,EAAoDQ,KAAK,EAAzD,EAA6D;AACzD,UAAIC,GAAG,GAAG,EAAV;;AACA,WAAK,IAAID,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKV,UAAL,CAAgBC,KAA5C,EAAmDS,KAAK,EAAxD,EAA4D;AACxDC,QAAAA,GAAG,CAACC,IAAJ,CAAS;AAACC,UAAAA,KAAK,EAAEJ,WAAR;AAAqBK,UAAAA,KAAK,EAAE;AAA5B,SAAT;AACA,YAAIJ,KAAK,KAAK,KAAKV,UAAL,CAAgBC,KAAhB,GAAwB,CAAtC,EACI,IAAIQ,WAAW,KAAK,CAApB,EAAuBA,WAAW,GAAG,CAAd,CAAvB,KACKA,WAAW,GAAG,CAAd;AACZ;;AACDL,MAAAA,OAAO,CAACQ,IAAR,CAAaD,GAAb;AACH;;AACD,SAAKI,QAAL,CAAc;AAACX,MAAAA,OAAO,EAAEA;AAAV,KAAd;AACA,SAAKW,QAAL,CAAc;AAACV,MAAAA,SAAS,EAAED;AAAZ,KAAd,EAAoC,MAAMY,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWE,SAAvB,CAA1C;AACH;;AAEDa,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKf,KAAL,CAAWC,OAAX,CAAmBe,GAAnB,CAAuB,CAACR,GAAD,EAAMS,EAAN,KAAa,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,EAAV;AAAc,MAAA,OAAO,EAAET,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApC,CADL,CADJ,CADJ;AAOH;;AAxC+B;;AA2CpC,eAAef,KAAf","sourcesContent":["import React from 'react';\nimport Row from './Row'\nimport './Board.css';\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.dimensions = { width: 8, height: 8 }\n        this.state = {\n            squares: [],\n            situation: []\n        }\n\n        this.prepareBoard = this.prepareBoard.bind(this);\n    }\n\n    componentDidMount() {\n        this.prepareBoard();\n    }\n\n    prepareBoard() {\n        let squareColor = 1, squares = [];\n        for (let index = 0; index < this.dimensions.height; index++) {\n            let row = [];\n            for (let index = 0; index < this.dimensions.width; index++) {\n                row.push({color: squareColor, piece: null}); \n                if (index !== this.dimensions.width - 1) \n                    if (squareColor === 1) squareColor = 0; \n                    else squareColor = 1;\n            }\n            squares.push(row); \n        }\n        this.setState({squares: squares});\n        this.setState({situation: squares}, () => console.log(this.state.situation));\n    }\n\n    render() {\n        return (\n            <div id=\"Board\">\n                <div className=\"Content\">\n                    {this.state.squares.map((row, id) => <Row key={id} squares={row} />)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}