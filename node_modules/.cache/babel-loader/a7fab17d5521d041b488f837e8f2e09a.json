{"ast":null,"code":"var _jsxFileName = \"/Users/iliyanvidev/Code/chess-move-parser/src/Panel.js\";\nimport React from 'react';\nimport Input from './Input';\nimport Buttons from './Buttons';\nimport './Panel.css';\nimport MovesHistory from './MovesHistory';\n\nclass Panel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      moves: ['Bdb8', 'Rdf8', 'Bdb8'],\n      notation: ''\n    };\n    this.updateNotation = this.updateNotation.bind(this);\n    this.addNotation = this.addNotation.bind(this);\n  }\n\n  updateNotation(event) {\n    this.setState({\n      notation: event.target.value\n    });\n  }\n\n  addNotation(event) {\n    event.preventDefault();\n    this.setState(state => {\n      state.moves.unshift(this.state.notation);\n      return {\n        moves: state.moves\n      };\n    }, () => this.setState({\n      notation: ''\n    }));\n  }\n\n  render() {\n    return React.createElement(\"aside\", {\n      id: \"Panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Input, {\n      updateNotation: this.updateNotation,\n      addNotation: this.addNotation,\n      value: this.state.notation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Session History\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(MovesHistory, {\n      moves: this.state.moves,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Buttons, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Panel;","map":{"version":3,"sources":["/Users/iliyanvidev/Code/chess-move-parser/src/Panel.js"],"names":["React","Input","Buttons","MovesHistory","Panel","Component","constructor","props","state","moves","notation","updateNotation","bind","addNotation","event","setState","target","value","preventDefault","unshift","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,aAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAKA,SAAKC,cAAL,GAAqB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAArB;AACA,SAAKC,WAAL,GAAkB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAlB;AACH;;AAEDD,EAAAA,cAAc,CAACG,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAACL,MAAAA,QAAQ,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAAxB,KAAd;AACH;;AAEDJ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACfA,IAAAA,KAAK,CAACI,cAAN;AACA,SAAKH,QAAL,CAAcP,KAAK,IAAI;AAACA,MAAAA,KAAK,CAACC,KAAN,CAAYU,OAAZ,CAAoB,KAAKX,KAAL,CAAWE,QAA/B;AAA0C,aAAO;AAACD,QAAAA,KAAK,EAAED,KAAK,CAACC;AAAd,OAAP;AAA4B,KAA9F,EAAgG,MAAM,KAAKM,QAAL,CAAc;AAACL,MAAAA,QAAQ,EAAE;AAAX,KAAd,CAAtG;AACH;;AAEDU,EAAAA,MAAM,GAAG;AACL,WACI;AAAO,MAAA,EAAE,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,cAAc,EAAE,KAAKT,cAA5B;AAA4C,MAAA,WAAW,EAAE,KAAKE,WAA9D;AAA2E,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,QAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AASH;;AA/B+B;;AAkCpC,eAAeL,KAAf","sourcesContent":["import React from 'react';\nimport Input from './Input'\nimport Buttons from './Buttons'\nimport './Panel.css';\nimport MovesHistory from './MovesHistory';\n\nclass Panel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            moves: ['Bdb8', 'Rdf8', 'Bdb8'],\n            notation: ''\n        }\n\n        this.updateNotation= this.updateNotation.bind(this);\n        this.addNotation= this.addNotation.bind(this);\n    }\n\n    updateNotation(event) {\n        this.setState({notation: event.target.value})\n    }\n\n    addNotation(event) {\n        event.preventDefault();\n        this.setState(state => {state.moves.unshift(this.state.notation); return {moves: state.moves}}, () => this.setState({notation: ''}));\n    }\n\n    render() {\n        return (\n            <aside id=\"Panel\">\n                <Input updateNotation={this.updateNotation} addNotation={this.addNotation} value={this.state.notation} />\n                <h3>Session History</h3>\n                <hr />\n                <MovesHistory moves={this.state.moves} />\n                <Buttons />\n            </aside>\n        );\n    }\n}\n\nexport default Panel;"]},"metadata":{},"sourceType":"module"}