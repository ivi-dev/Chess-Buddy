{"ast":null,"code":"import PouchDB from 'pouchdb-browser';\n\nclass Database {\n  constructor(dbName = 'chess-moves-parser') {\n    this.db = new PouchDB(dbName, {\n      auto_compaction: true\n    });\n    this.db.changes({\n      live: true,\n      since: 'now'\n    }).on('change', function (change) {\n      console.log(\"DB_EVENT::There was a change in the local database. Something was inserted, removed or updated.\");\n    }).on('error', function (err) {\n      console.log('DB_EVENT::There was an error during a database operation.');\n    });\n  }\n\n  insert(doc, successCallback, errorCallback) {\n    this.db.put(doc).then(function (response) {\n      successCallback(response);\n    }).catch(function (err) {\n      if (errorCallback) errorCallback(err);else console.log('There was an error while trying to insert a record into the database', err);\n    });\n  }\n\n  getAll(options, successCallback, errorCallback) {\n    this.db.allDocs(options).then(function (response) {\n      successCallback(response);\n    }).catch(function (err) {\n      if (errorCallback) errorCallback(err);else console.log('There was an error while trying to insert a record into the database', err);\n    });\n  }\n\n  delete(id, successCallback, errorCallback) {\n    const self = this;\n    this.db.get(id).then(function (doc) {\n      return self.db.remove(doc);\n    }).then(function (res) {\n      successCallback(res);\n    }).catch(function (err) {\n      if (errorCallback) errorCallback(err);else console.log('There was an error while trying to insert a record into the database', err);\n    });\n  }\n\n}\n\nexport default Database;","map":{"version":3,"sources":["/Users/iliyanvidev/Code/chess-move-parser/src/Database.js"],"names":["PouchDB","Database","constructor","dbName","db","auto_compaction","changes","live","since","on","change","console","log","err","insert","doc","successCallback","errorCallback","put","then","response","catch","getAll","options","allDocs","delete","id","self","get","remove","res"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;;AAEA,MAAMC,QAAN,CAAe;AACXC,EAAAA,WAAW,CAACC,MAAM,GAAG,oBAAV,EAAgC;AACvC,SAAKC,EAAL,GAAU,IAAIJ,OAAJ,CAAYG,MAAZ,EAAoB;AAACE,MAAAA,eAAe,EAAE;AAAlB,KAApB,CAAV;AACA,SAAKD,EAAL,CAAQE,OAAR,CAAgB;AACZC,MAAAA,IAAI,EAAE,IADM;AAEZC,MAAAA,KAAK,EAAE;AAFK,KAAhB,EAGGC,EAHH,CAGM,QAHN,EAGgB,UAAUC,MAAV,EAAkB;AAC9BC,MAAAA,OAAO,CAACC,GAAR;AACH,KALD,EAKGH,EALH,CAKM,OALN,EAKe,UAAUI,GAAV,EAAe;AAC1BF,MAAAA,OAAO,CAACC,GAAR,CAAY,2DAAZ;AACH,KAPD;AAQH;;AAEDE,EAAAA,MAAM,CAACC,GAAD,EAAMC,eAAN,EAAuBC,aAAvB,EAAsC;AACxC,SAAKb,EAAL,CAAQc,GAAR,CAAYH,GAAZ,EAAiBI,IAAjB,CAAsB,UAAUC,QAAV,EAAoB;AACtCJ,MAAAA,eAAe,CAACI,QAAD,CAAf;AACH,KAFD,EAEGC,KAFH,CAES,UAAUR,GAAV,EAAe;AACpB,UAAII,aAAJ,EAAmBA,aAAa,CAACJ,GAAD,CAAb,CAAnB,KACKF,OAAO,CAACC,GAAR,CAAY,sEAAZ,EAAoFC,GAApF;AACR,KALD;AAMH;;AAEDS,EAAAA,MAAM,CAACC,OAAD,EAAUP,eAAV,EAA2BC,aAA3B,EAA0C;AAC5C,SAAKb,EAAL,CAAQoB,OAAR,CAAgBD,OAAhB,EAAyBJ,IAAzB,CAA8B,UAAUC,QAAV,EAAoB;AAC9CJ,MAAAA,eAAe,CAACI,QAAD,CAAf;AACH,KAFD,EAEGC,KAFH,CAES,UAAUR,GAAV,EAAe;AACpB,UAAII,aAAJ,EAAmBA,aAAa,CAACJ,GAAD,CAAb,CAAnB,KACKF,OAAO,CAACC,GAAR,CAAY,sEAAZ,EAAoFC,GAApF;AACR,KALD;AAMH;;AAEDY,EAAAA,MAAM,CAACC,EAAD,EAAKV,eAAL,EAAsBC,aAAtB,EAAqC;AACvC,UAAMU,IAAI,GAAG,IAAb;AACA,SAAKvB,EAAL,CAAQwB,GAAR,CAAYF,EAAZ,EAAgBP,IAAhB,CAAqB,UAASJ,GAAT,EAAc;AAChC,aAAOY,IAAI,CAACvB,EAAL,CAAQyB,MAAR,CAAed,GAAf,CAAP;AACF,KAFD,EAEGI,IAFH,CAEQ,UAASW,GAAT,EAAc;AAClBd,MAAAA,eAAe,CAACc,GAAD,CAAf;AACH,KAJD,EAIGT,KAJH,CAIS,UAAUR,GAAV,EAAe;AACpB,UAAII,aAAJ,EAAmBA,aAAa,CAACJ,GAAD,CAAb,CAAnB,KACKF,OAAO,CAACC,GAAR,CAAY,sEAAZ,EAAoFC,GAApF;AACR,KAPD;AAQH;;AAzCU;;AA4Cf,eAAeZ,QAAf","sourcesContent":["import PouchDB from 'pouchdb-browser';\n\nclass Database {\n    constructor(dbName = 'chess-moves-parser') {\n        this.db = new PouchDB(dbName, {auto_compaction: true});\n        this.db.changes({\n            live: true,\n            since: 'now'\n        }).on('change', function (change) {\n            console.log(`DB_EVENT::There was a change in the local database. Something was inserted, removed or updated.`);\n        }).on('error', function (err) {\n            console.log('DB_EVENT::There was an error during a database operation.');\n        });\n    }\n\n    insert(doc, successCallback, errorCallback) {\n        this.db.put(doc).then(function (response) {\n            successCallback(response);\n        }).catch(function (err) {\n            if (errorCallback) errorCallback(err); \n            else console.log('There was an error while trying to insert a record into the database', err);\n        });\n    }\n\n    getAll(options, successCallback, errorCallback) {\n        this.db.allDocs(options).then(function (response) {\n            successCallback(response);\n        }).catch(function (err) {\n            if (errorCallback) errorCallback(err); \n            else console.log('There was an error while trying to insert a record into the database', err);\n        });\n    }\n\n    delete(id, successCallback, errorCallback) {\n        const self = this;\n        this.db.get(id).then(function(doc) {\n           return self.db.remove(doc);\n        }).then(function(res) {\n            successCallback(res);\n        }).catch(function (err) {\n            if (errorCallback) errorCallback(err); \n            else console.log('There was an error while trying to insert a record into the database', err);\n        });\n    }\n}\n\nexport default Database;"]},"metadata":{},"sourceType":"module"}