{"ast":null,"code":"var _jsxFileName = \"/Users/iliyanvidev/Code/chess-move-parser/src/MovesHistory.js\";\nimport React from 'react';\nimport Move from './Move';\nimport './MovesHistory.css';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nclass MovesHistory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedMove: -1\n    };\n    this.selectMove = this.selectMove.bind(this);\n  }\n\n  selectMove(id) {\n    console.log(id);\n\n    if (this.state.selectedMove !== id) {\n      this.setState({\n        selectedMove: id\n      }, () => {\n        if (this.props.moves.length > 1) {\n          this.props.fadeOutMoves(this.state.selectedMove);\n        }\n      });\n    } else this.setState({\n      selectedMove: -1\n    }, () => this.props.resetMovesFade());\n  }\n\n  cycleMoves(key) {\n    if (this.props.moves.length > 0) {\n      if (key === 'up') if (this.state.selectedMove < this.props.moves.length) this.selectMove(this.state.selectedMove + 1);else if (key === 'down') if (this.state.selectedMove > 1) this.selectMove(this.state.selectedMove - 1);\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      id: \"MovesHistory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(KeyboardEventHandler, {\n      handleKeys: ['up', 'down'],\n      onKeyEvent: key => this.cycleMoves(key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), this.props.moves.map(move => React.createElement(Move, {\n      key: move.id,\n      notation: move.notation,\n      id: move.id,\n      side: move.side,\n      situation: move.situation,\n      faded: move.faded,\n      selectMove: this.selectMove,\n      onKeyDown: this.cycleMoves,\n      updateSituation: this.props.updateSituation,\n      selected: this.state.selectedMove === move.id ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default MovesHistory;","map":{"version":3,"sources":["/Users/iliyanvidev/Code/chess-move-parser/src/MovesHistory.js"],"names":["React","Move","KeyboardEventHandler","MovesHistory","Component","constructor","props","state","selectedMove","selectMove","bind","id","console","log","setState","moves","length","fadeOutMoves","resetMovesFade","cycleMoves","key","render","map","move","notation","side","situation","faded","updateSituation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,oBAAP;AACA,OAAOC,oBAAP,MAAiC,8BAAjC;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,CAAC;AADN,KAAb;AAGA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDD,EAAAA,UAAU,CAACE,EAAD,EAAK;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;;AACA,QAAI,KAAKJ,KAAL,CAAWC,YAAX,KAA4BG,EAAhC,EAAoC;AAChC,WAAKG,QAAL,CAAc;AAACN,QAAAA,YAAY,EAAEG;AAAf,OAAd,EAAkC,MAAM;AACpC,YAAI,KAAKL,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B,eAAKV,KAAL,CAAWW,YAAX,CAAwB,KAAKV,KAAL,CAAWC,YAAnC;AACH;AACJ,OAJD;AAKH,KAND,MAQI,KAAKM,QAAL,CAAc;AAACN,MAAAA,YAAY,EAAE,CAAC;AAAhB,KAAd,EAAkC,MAAM,KAAKF,KAAL,CAAWY,cAAX,EAAxC;AACP;;AAEDC,EAAAA,UAAU,CAACC,GAAD,EAAM;AACZ,QAAI,KAAKd,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B,UAAII,GAAG,KAAK,IAAZ,EACI,IAAI,KAAKb,KAAL,CAAWC,YAAX,GAA0B,KAAKF,KAAL,CAAWS,KAAX,CAAiBC,MAA/C,EACI,KAAKP,UAAL,CAAgB,KAAKF,KAAL,CAAWC,YAAX,GAA0B,CAA1C,EADJ,KAEC,IAAGY,GAAG,KAAK,MAAX,EACD,IAAI,KAAKb,KAAL,CAAWC,YAAX,GAA0B,CAA9B,EACI,KAAKC,UAAL,CAAgB,KAAKF,KAAL,CAAWC,YAAX,GAA0B,CAA1C;AAEX;AACJ;;AAEDa,EAAAA,MAAM,GAAG;AACL,WACI;AAAS,MAAA,EAAE,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,oBAAD;AAAsB,MAAA,UAAU,EAAE,CAAC,IAAD,EAAO,MAAP,CAAlC;AAAkD,MAAA,UAAU,EAAED,GAAG,IAAI,KAAKD,UAAL,CAAgBC,GAAhB,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKd,KAAL,CAAWS,KAAX,CAAiBO,GAAjB,CAAqBC,IAAI,IAAI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACZ,EAAhB;AAAoB,MAAA,QAAQ,EAAEY,IAAI,CAACC,QAAnC;AAA6C,MAAA,EAAE,EAAED,IAAI,CAACZ,EAAtD;AAA0D,MAAA,IAAI,EAAEY,IAAI,CAACE,IAArE;AAA2E,MAAA,SAAS,EAAEF,IAAI,CAACG,SAA3F;AACM,MAAA,KAAK,EAAEH,IAAI,CAACI,KADlB;AAEM,MAAA,UAAU,EAAE,KAAKlB,UAFvB;AAGM,MAAA,SAAS,EAAE,KAAKU,UAHtB;AAIM,MAAA,eAAe,EAAE,KAAKb,KAAL,CAAWsB,eAJlC;AAKM,MAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWC,YAAX,KAA4Be,IAAI,CAACZ,EAAjC,GAAsC,IAAtC,GAA6C,KAL7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,CAFL,CADJ;AAWH;;AA9CsC;;AAiD3C,eAAeR,YAAf","sourcesContent":["import React from 'react';\nimport Move from './Move'\nimport './MovesHistory.css';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nclass MovesHistory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedMove: -1\n        }\n        this.selectMove = this.selectMove.bind(this);\n    }\n\n    selectMove(id) {\n        console.log(id)\n        if (this.state.selectedMove !== id) {\n            this.setState({selectedMove: id}, () => {\n                if (this.props.moves.length > 1) {\n                    this.props.fadeOutMoves(this.state.selectedMove);\n                }\n            });\n        }\n        else\n            this.setState({selectedMove: -1}, () => this.props.resetMovesFade());\n    }\n\n    cycleMoves(key) {\n        if (this.props.moves.length > 0) {\n            if (key === 'up')\n                if (this.state.selectedMove < this.props.moves.length)\n                    this.selectMove(this.state.selectedMove + 1);\n            else if(key === 'down')\n                if (this.state.selectedMove > 1)\n                    this.selectMove(this.state.selectedMove - 1);\n\n        }\n    }\n\n    render() {\n        return (\n            <section id=\"MovesHistory\">\n                <KeyboardEventHandler handleKeys={['up', 'down']} onKeyEvent={key => this.cycleMoves(key)} />\n                {this.props.moves.map(move => <Move key={move.id} notation={move.notation} id={move.id} side={move.side} situation={move.situation} \n                                                    faded={move.faded}\n                                                    selectMove={this.selectMove}\n                                                    onKeyDown={this.cycleMoves}\n                                                    updateSituation={this.props.updateSituation}\n                                                    selected={this.state.selectedMove === move.id ? true : false} />)}\n            </section>\n        );\n    }\n}\n\nexport default MovesHistory;"]},"metadata":{},"sourceType":"module"}