{"ast":null,"code":"import PouchDB from 'pouchdb-browser';\n\nclass Database {\n  constructor(dbName = 'chess-moves-parser') {\n    const localDB = new PouchDB(dbName, {\n      auto_compaction: true\n    });\n    localDB.changes({\n      live: true,\n      since: 'now'\n    }).on('change', function (change) {\n      this.onDBChange(change);\n    }).on('error', function (err) {\n      this.onDBError(err);\n    });\n  }\n\n  insert(doc) {}\n\n  onDBChange(change) {\n    console.log(\"DB_EVENT::There was a change in the local database. Something was inserted, removed or updated.\");\n  }\n\n  onDBError(err) {\n    console.log('DB_EVENT::There was an error during a database operation.');\n  }\n\n}\n\nexport default Database;","map":{"version":3,"sources":["/Users/iliyanvidev/Code/chess-move-parser/src/Database.js"],"names":["PouchDB","Database","constructor","dbName","localDB","auto_compaction","changes","live","since","on","change","onDBChange","err","onDBError","insert","doc","console","log"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;;AAEA,MAAMC,QAAN,CAAe;AACXC,EAAAA,WAAW,CAACC,MAAM,GAAG,oBAAV,EAAgC;AACvC,UAAMC,OAAO,GAAG,IAAIJ,OAAJ,CAAYG,MAAZ,EAAoB;AAACE,MAAAA,eAAe,EAAE;AAAlB,KAApB,CAAhB;AACAD,IAAAA,OAAO,CAACE,OAAR,CAAgB;AACZC,MAAAA,IAAI,EAAE,IADM;AAEZC,MAAAA,KAAK,EAAE;AAFK,KAAhB,EAGGC,EAHH,CAGM,QAHN,EAGgB,UAAUC,MAAV,EAAkB;AAC9B,WAAKC,UAAL,CAAgBD,MAAhB;AACH,KALD,EAKGD,EALH,CAKM,OALN,EAKe,UAAUG,GAAV,EAAe;AAC1B,WAAKC,SAAL,CAAeD,GAAf;AACH,KAPD;AAQH;;AAEDE,EAAAA,MAAM,CAACC,GAAD,EAAM,CAEX;;AAEDJ,EAAAA,UAAU,CAACD,MAAD,EAAS;AACfM,IAAAA,OAAO,CAACC,GAAR;AACH;;AAEDJ,EAAAA,SAAS,CAACD,GAAD,EAAM;AACXI,IAAAA,OAAO,CAACC,GAAR,CAAY,2DAAZ;AACH;;AAvBU;;AA0Bf,eAAehB,QAAf","sourcesContent":["import PouchDB from 'pouchdb-browser';\n\nclass Database {\n    constructor(dbName = 'chess-moves-parser') {\n        const localDB = new PouchDB(dbName, {auto_compaction: true});\n        localDB.changes({\n            live: true,\n            since: 'now'\n        }).on('change', function (change) {\n            this.onDBChange(change);\n        }).on('error', function (err) {\n            this.onDBError(err);\n        });\n    }\n\n    insert(doc) {\n\n    }\n\n    onDBChange(change) {\n        console.log(`DB_EVENT::There was a change in the local database. Something was inserted, removed or updated.`);\n    }\n\n    onDBError(err) {\n        console.log('DB_EVENT::There was an error during a database operation.');\n    }\n}\n\nexport default Database;"]},"metadata":{},"sourceType":"module"}