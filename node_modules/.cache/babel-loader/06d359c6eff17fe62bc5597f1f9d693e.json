{"ast":null,"code":"var _jsxFileName = \"/Users/iliyanvidev/Code/chess-move-parser/src/Move.js\";\nimport React from 'react';\nimport './Move.css';\n\nfunction Move(props) {\n  return React.createElement(\"div\", {\n    className: \"Move \".concat(props.selected ? 'selected' : '', \" \").concat(props.faded ? 'faded' : ''),\n    onClick: () => {\n      props.selectMove(props.id);\n      props.updateSituation(props.situation);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"TurnId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"#\", props.id), \" \", React.createElement(\"div\", {\n    className: \"Side \".concat(props.side),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), \" \", props.notation);\n}\n\nexport default Move;","map":{"version":3,"sources":["/Users/iliyanvidev/Code/chess-move-parser/src/Move.js"],"names":["React","Move","props","selected","faded","selectMove","id","updateSituation","situation","side","notation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,SACI;AAAK,IAAA,SAAS,iBAAUA,KAAK,CAACC,QAAN,GAAiB,UAAjB,GAA8B,EAAxC,cAA8CD,KAAK,CAACE,KAAN,GAAc,OAAd,GAAwB,EAAtE,CAAd;AACK,IAAA,OAAO,EAAE,MAAM;AAACF,MAAAA,KAAK,CAACG,UAAN,CAAiBH,KAAK,CAACI,EAAvB;AAA4BJ,MAAAA,KAAK,CAACK,eAAN,CAAsBL,KAAK,CAACM,SAA5B;AAAuC,KADxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA0BN,KAAK,CAACI,EAAhC,CAFJ,OAE8C;AAAK,IAAA,SAAS,iBAAUJ,KAAK,CAACO,IAAhB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF9C,OAE4FP,KAAK,CAACQ,QAFlG,CADJ;AAMH;;AAED,eAAeT,IAAf","sourcesContent":["import React from 'react';\nimport './Move.css';\n\nfunction Move(props) {\n    return (\n        <div className={`Move ${props.selected ? 'selected' : ''} ${props.faded ? 'faded' : ''}`} \n             onClick={() => {props.selectMove(props.id); props.updateSituation(props.situation)}}>\n            <div className=\"TurnId\">#{props.id}</div> <div className={`Side ${props.side}`}></div> {props.notation}\n        </div>\n    );\n}\n\nexport default Move;"]},"metadata":{},"sourceType":"module"}