{"ast":null,"code":"var _jsxFileName = \"/Users/iliyanvidev/Code/chess-move-parser/src/Move.js\";\nimport React from 'react';\nimport './Move.css';\n\nfunction Move(props) {\n  console.log(props);\n  return React.createElement(\"div\", {\n    className: \"Move \".concat(props.selected ? 'selected' : null, \" \").concat(props.faded ? 'faded' : null),\n    onClick: () => {\n      props.selectMove(props.id);\n      props.updateSituation(props.situation);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"TurnId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"#\", props.id), \" \", React.createElement(\"div\", {\n    className: \"Side \".concat(props.side),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), \" \", props.notation);\n}\n\nexport default Move;","map":{"version":3,"sources":["/Users/iliyanvidev/Code/chess-move-parser/src/Move.js"],"names":["React","Move","props","console","log","selected","faded","selectMove","id","updateSituation","situation","side","notation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACI;AAAK,IAAA,SAAS,iBAAUA,KAAK,CAACG,QAAN,GAAiB,UAAjB,GAA8B,IAAxC,cAAgDH,KAAK,CAACI,KAAN,GAAc,OAAd,GAAwB,IAAxE,CAAd;AACK,IAAA,OAAO,EAAE,MAAM;AAACJ,MAAAA,KAAK,CAACK,UAAN,CAAiBL,KAAK,CAACM,EAAvB;AAA4BN,MAAAA,KAAK,CAACO,eAAN,CAAsBP,KAAK,CAACQ,SAA5B;AAAuC,KADxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA0BR,KAAK,CAACM,EAAhC,CAFJ,OAE8C;AAAK,IAAA,SAAS,iBAAUN,KAAK,CAACS,IAAhB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF9C,OAE4FT,KAAK,CAACU,QAFlG,CADJ;AAMH;;AAED,eAAeX,IAAf","sourcesContent":["import React from 'react';\nimport './Move.css';\n\nfunction Move(props) {\n    console.log(props)\n    return (\n        <div className={`Move ${props.selected ? 'selected' : null} ${props.faded ? 'faded' : null}`} \n             onClick={() => {props.selectMove(props.id); props.updateSituation(props.situation)}}>\n            <div className=\"TurnId\">#{props.id}</div> <div className={`Side ${props.side}`}></div> {props.notation}\n        </div>\n    );\n}\n\nexport default Move;"]},"metadata":{},"sourceType":"module"}