{"ast":null,"code":"var _jsxFileName = \"/Users/iliyanvidev/Code/chess-move-parser/src/MovesHistory.js\";\nimport React from 'react';\nimport Move from './Move';\nimport './MovesHistory.css';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nclass MovesHistory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedMove: -1\n    };\n    this.selectMove = this.selectMove.bind(this);\n  }\n\n  selectMove(id) {\n    if (this.state.selectedMove !== id) {\n      this.setState({\n        selectedMove: id\n      }, () => {\n        if (this.props.moves.length > 1) {\n          this.props.fadeOutMoves(this.state.selectedMove);\n        }\n      });\n    } else this.setState({\n      selectedMove: -1\n    }, () => this.props.resetMovesFade());\n  }\n\n  cycleMoves(event) {\n    console.log(event.charCode);\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      id: \"MovesHistory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.moves.map(move => React.createElement(Move, {\n      key: move.id,\n      notation: move.notation,\n      id: move.id,\n      side: move.side,\n      situation: move.situation,\n      faded: move.faded,\n      selectMove: this.selectMove,\n      onKeyDown: this.cycleMoves,\n      updateSituation: this.props.updateSituation,\n      selected: this.state.selectedMove === move.id ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default MovesHistory;","map":{"version":3,"sources":["/Users/iliyanvidev/Code/chess-move-parser/src/MovesHistory.js"],"names":["React","Move","KeyboardEventHandler","MovesHistory","Component","constructor","props","state","selectedMove","selectMove","bind","id","setState","moves","length","fadeOutMoves","resetMovesFade","cycleMoves","event","console","log","charCode","render","map","move","notation","side","situation","faded","updateSituation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,oBAAP;AACA,OAAOC,oBAAP,MAAiC,8BAAjC;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,CAAC;AADN,KAAb;AAGA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDD,EAAAA,UAAU,CAACE,EAAD,EAAK;AACX,QAAI,KAAKJ,KAAL,CAAWC,YAAX,KAA4BG,EAAhC,EAAoC;AAChC,WAAKC,QAAL,CAAc;AAACJ,QAAAA,YAAY,EAAEG;AAAf,OAAd,EAAkC,MAAM;AACpC,YAAI,KAAKL,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B,eAAKR,KAAL,CAAWS,YAAX,CAAwB,KAAKR,KAAL,CAAWC,YAAnC;AACH;AACJ,OAJD;AAKH,KAND,MAQI,KAAKI,QAAL,CAAc;AAACJ,MAAAA,YAAY,EAAE,CAAC;AAAhB,KAAd,EAAkC,MAAM,KAAKF,KAAL,CAAWU,cAAX,EAAxC;AACP;;AAEDC,EAAAA,UAAU,CAACC,KAAD,EAAQ;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAS,MAAA,EAAE,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKhB,KAAL,CAAWO,KAAX,CAAiBU,GAAjB,CAAqBC,IAAI,IAAI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACb,EAAhB;AAAoB,MAAA,QAAQ,EAAEa,IAAI,CAACC,QAAnC;AAA6C,MAAA,EAAE,EAAED,IAAI,CAACb,EAAtD;AAA0D,MAAA,IAAI,EAAEa,IAAI,CAACE,IAArE;AAA2E,MAAA,SAAS,EAAEF,IAAI,CAACG,SAA3F;AACM,MAAA,KAAK,EAAEH,IAAI,CAACI,KADlB;AAEM,MAAA,UAAU,EAAE,KAAKnB,UAFvB;AAGM,MAAA,SAAS,EAAE,KAAKQ,UAHtB;AAIM,MAAA,eAAe,EAAE,KAAKX,KAAL,CAAWuB,eAJlC;AAKM,MAAA,QAAQ,EAAE,KAAKtB,KAAL,CAAWC,YAAX,KAA4BgB,IAAI,CAACb,EAAjC,GAAsC,IAAtC,GAA6C,KAL7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,CADL,CADJ;AAUH;;AApCsC;;AAuC3C,eAAeR,YAAf","sourcesContent":["import React from 'react';\nimport Move from './Move'\nimport './MovesHistory.css';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nclass MovesHistory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedMove: -1\n        }\n        this.selectMove = this.selectMove.bind(this);\n    }\n\n    selectMove(id) {\n        if (this.state.selectedMove !== id) {\n            this.setState({selectedMove: id}, () => {\n                if (this.props.moves.length > 1) {\n                    this.props.fadeOutMoves(this.state.selectedMove);\n                }\n            });\n        }\n        else\n            this.setState({selectedMove: -1}, () => this.props.resetMovesFade());\n    }\n\n    cycleMoves(event) {\n        console.log(event.charCode);\n    }\n\n    render() {\n        return (\n            <section id=\"MovesHistory\">\n                {this.props.moves.map(move => <Move key={move.id} notation={move.notation} id={move.id} side={move.side} situation={move.situation} \n                                                    faded={move.faded}\n                                                    selectMove={this.selectMove}\n                                                    onKeyDown={this.cycleMoves}\n                                                    updateSituation={this.props.updateSituation}\n                                                    selected={this.state.selectedMove === move.id ? true : false} />)}\n            </section>\n        );\n    }\n}\n\nexport default MovesHistory;"]},"metadata":{},"sourceType":"module"}