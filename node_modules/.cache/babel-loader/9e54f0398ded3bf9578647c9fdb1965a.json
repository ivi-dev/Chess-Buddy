{"ast":null,"code":"import _classCallCheck from\"/Users/iliyanvidev/Code/chess-buddy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/iliyanvidev/Code/chess-buddy/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/iliyanvidev/Code/chess-buddy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/iliyanvidev/Code/chess-buddy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/iliyanvidev/Code/chess-buddy/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/iliyanvidev/Code/chess-buddy/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Board from'./Board';import'./App.css';import Panel from'./Panel';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));_this.board={vCoordinates:['A','B','C','D','E','F','G','H'],hCoordinates:['1','2','3','4','5','6','7','8'],turnMap:{'Whites':'white-','Blacks':'black-'},piecesMap:{'R':'rook','N':'knight','B':'bishop','K':'king','Q':'queen','P':'pawn'}};_this.state={turn:'Whites',initialSet:{whitesOnTop:{'A1':'white-rook','B1':'white-knight','C1':'white-bishop','D1':'white-queen','E1':'white-king','F1':'white-bishop','G1':'white-knight','H1':'white-rook','A2':'white-pawn','B2':'white-pawn','C2':'white-pawn','D2':'white-pawn','E2':'white-pawn','F2':'white-pawn','G2':'white-pawn','H2':'white-pawn','A7':'black-pawn','B7':'black-pawn','C7':'black-pawn','D7':'black-pawn','E7':'black-pawn','F7':'black-pawn','G7':'black-pawn','H7':'black-pawn','A8':'black-rook','B8':'black-knight','C8':'black-bishop','D8':'black-king','E8':'black-queen','F8':'black-bishop','G8':'black-knight','H8':'black-rook'},blacksOnTop:{'A1':'black-rook','B1':'black-knight','C1':'black-bishop','D1':'black-queen','E1':'black-king','F1':'black-bishop','G1':'black-knight','H1':'black-rook','A2':'black-pawn','B2':'black-pawn','C2':'black-pawn','D2':'black-pawn','E2':'black-pawn','F2':'black-pawn','G2':'black-pawn','H2':'black-pawn','A7':'white-pawn','B7':'white-pawn','C7':'white-pawn','D7':'white-pawn','E7':'white-pawn','F7':'white-pawn','G7':'white-pawn','H7':'white-pawn','A8':'white-rook','B8':'white-knight','C8':'white-bishop','D8':'white-king','E8':'white-queen','F8':'white-bishop','G8':'white-knight','H8':'white-rook'}},situation:[],movesHistory:[],initialSetType:'blacksOnTop'};_this.recordMoves=_this.recordMoves.bind(_assertThisInitialized(_this));_this.updateSituation=_this.updateSituation.bind(_assertThisInitialized(_this));_this.findRankNumber=_this.findRankNumber.bind(_assertThisInitialized(_this));_this.findFileNumber=_this.findFileNumber.bind(_assertThisInitialized(_this));_this.updateSituationByMoveId=_this.updateSituationByMoveId.bind(_assertThisInitialized(_this));_this.loadSessionFromArchive=_this.loadSessionFromArchive.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"findSquare\",value:function findSquare(situation,coordinates){var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=situation[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var row=_step.value;var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=row[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var square=_step2.value;if(square.coordinates===coordinates){return square;}}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return!=null){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}}},{key:\"findRankNumber\",value:function findRankNumber(bySquareCoordinates){for(var i=0;i<this.state.situation.length;i++){var row=this.state.situation[i];for(var j=0;j<row;j++){var square=row[j];if(square.coordinates===bySquareCoordinates){return i;}}}}},{key:\"findFileNumber\",value:function findFileNumber(bySquareCoordinates){for(var i=0;i<this.state.situation.length;i++){var row=this.state.situation[i];for(var j=0;j<row;j++){var square=row[j];if(square.coordinates===bySquareCoordinates){return j;}}}}},{key:\"copySituation\",value:function copySituation(situation){var situationCopy=[];var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=situation[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var row=_step3.value;var rowCopy=[];var _iteratorNormalCompletion4=true;var _didIteratorError4=false;var _iteratorError4=undefined;try{for(var _iterator4=row[Symbol.iterator](),_step4;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=true){var square=_step4.value;var squareCopy={};for(var key in square){squareCopy[key]=square[key];}rowCopy.push(squareCopy);}}catch(err){_didIteratorError4=true;_iteratorError4=err;}finally{try{if(!_iteratorNormalCompletion4&&_iterator4.return!=null){_iterator4.return();}}finally{if(_didIteratorError4){throw _iteratorError4;}}}situationCopy.push(rowCopy);}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return!=null){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}return situationCopy;}},{key:\"copyMovesHistory\",value:function copyMovesHistory(history){var historyCopy=[];if(history.length>0){var _iteratorNormalCompletion5=true;var _didIteratorError5=false;var _iteratorError5=undefined;try{for(var _iterator5=history[Symbol.iterator](),_step5;!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=true){var entry=_step5.value;var entryCopy={};for(var key in entry){entryCopy[key]=entry[key];}historyCopy.push(entryCopy);}}catch(err){_didIteratorError5=true;_iteratorError5=err;}finally{try{if(!_iteratorNormalCompletion5&&_iterator5.return!=null){_iterator5.return();}}finally{if(_didIteratorError5){throw _iteratorError5;}}}}return historyCopy;}},{key:\"recordMoves\",value:function recordMoves(moves){var i=0;var self=this;var reversedMoves=moves.slice().reverse();function recordMove(move){self.setState(function(state){var situationCopy=self.copySituation(state.situation);self.findSquare(situationCopy,move.from).piece=null;var movedPiece=\"\".concat(self.board.turnMap[move.side]).concat(self.board.piecesMap[move.piece]);self.findSquare(situationCopy,move.to).piece=movedPiece;var movesHistoryCopy=self.copyMovesHistory(state.movesHistory);movesHistoryCopy.push({id:\"\".concat(move.id),situation:situationCopy});return{situation:situationCopy,movesHistory:movesHistoryCopy};},function(){i++;if(i<moves.length)recordMove(reversedMoves[i]);});}recordMove(reversedMoves[i]);}},{key:\"findSituation\",value:function findSituation(moveId){var _iteratorNormalCompletion6=true;var _didIteratorError6=false;var _iteratorError6=undefined;try{for(var _iterator6=this.state.movesHistory[Symbol.iterator](),_step6;!(_iteratorNormalCompletion6=(_step6=_iterator6.next()).done);_iteratorNormalCompletion6=true){var move=_step6.value;if(move.id===moveId.toString())return move.situation;}}catch(err){_didIteratorError6=true;_iteratorError6=err;}finally{try{if(!_iteratorNormalCompletion6&&_iterator6.return!=null){_iterator6.return();}}finally{if(_didIteratorError6){throw _iteratorError6;}}}}},{key:\"updateSituation\",value:function updateSituation(situation){this.setState({situation:situation});}},{key:\"updateSituationByMoveId\",value:function updateSituationByMoveId(id){this.updateSituation(this.findSituation(id));}},{key:\"loadSessionFromArchive\",value:function loadSessionFromArchive(movesHistory,moves){var _this2=this;this.setState({movesHistory:movesHistory},function(){return _this2.updateSituationByMoveId(moves[0].id);});}},{key:\"render\",value:function render(){return React.createElement(\"div\",{id:\"App\"},React.createElement(Board,{board:this.board,initialSet:this.state.initialSet,initialSetType:this.state.initialSetType,situation:this.state.situation,updateSituation:this.updateSituation}),React.createElement(Panel,{side:this.state.turn,recordMoves:this.recordMoves,situation:this.state.situation,movesHistory:this.state.movesHistory,updateSituationByMoveId:this.updateSituationByMoveId,loadSessionFromArchive:this.loadSessionFromArchive,testRun:false}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/iliyanvidev/Code/chess-buddy/src/App.js"],"names":["React","Board","Panel","App","props","board","vCoordinates","hCoordinates","turnMap","piecesMap","state","turn","initialSet","whitesOnTop","blacksOnTop","situation","movesHistory","initialSetType","recordMoves","bind","updateSituation","findRankNumber","findFileNumber","updateSituationByMoveId","loadSessionFromArchive","coordinates","row","square","bySquareCoordinates","i","length","j","situationCopy","rowCopy","squareCopy","key","push","history","historyCopy","entry","entryCopy","moves","self","reversedMoves","slice","reverse","recordMove","move","setState","copySituation","findSquare","from","piece","movedPiece","side","to","movesHistoryCopy","copyMovesHistory","id","moveId","toString","findSituation","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Board from './Board';\nimport './App.css';\nimport Panel from './Panel';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.board = {\n      vCoordinates: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'],\n      hCoordinates: ['1', '2', '3', '4', '5', '6', '7', '8'],\n      turnMap: {'Whites': 'white-', 'Blacks': 'black-'},\n      piecesMap: {\n        'R': 'rook',\n        'N': 'knight',\n        'B': 'bishop',\n        'K': 'king',\n        'Q': 'queen',\n        'P': 'pawn'\n      }\n    }\n    this.state = {\n      turn: 'Whites',\n      initialSet: {\n        whitesOnTop: {'A1': 'white-rook', 'B1': 'white-knight', 'C1': 'white-bishop', 'D1': 'white-queen', 'E1': 'white-king', 'F1': 'white-bishop', 'G1': 'white-knight', 'H1': 'white-rook', \n                      'A2': 'white-pawn', 'B2': 'white-pawn', 'C2': 'white-pawn', 'D2': 'white-pawn', 'E2': 'white-pawn', 'F2': 'white-pawn', 'G2': 'white-pawn', 'H2': 'white-pawn',\n                      'A7': 'black-pawn', 'B7': 'black-pawn', 'C7': 'black-pawn', 'D7': 'black-pawn', 'E7': 'black-pawn', 'F7': 'black-pawn', 'G7': 'black-pawn', 'H7': 'black-pawn',\n                      'A8': 'black-rook', 'B8': 'black-knight', 'C8': 'black-bishop', 'D8': 'black-king', 'E8': 'black-queen', 'F8': 'black-bishop', 'G8': 'black-knight', 'H8': 'black-rook'}, \n        \n        blacksOnTop: {'A1': 'black-rook', 'B1': 'black-knight', 'C1': 'black-bishop', 'D1': 'black-queen', 'E1': 'black-king', 'F1': 'black-bishop', 'G1': 'black-knight', 'H1': 'black-rook', \n                      'A2': 'black-pawn', 'B2': 'black-pawn', 'C2': 'black-pawn', 'D2': 'black-pawn', 'E2': 'black-pawn', 'F2': 'black-pawn', 'G2': 'black-pawn', 'H2': 'black-pawn',\n                      'A7': 'white-pawn', 'B7': 'white-pawn', 'C7': 'white-pawn', 'D7': 'white-pawn', 'E7': 'white-pawn', 'F7': 'white-pawn', 'G7': 'white-pawn', 'H7': 'white-pawn',\n                      'A8': 'white-rook', 'B8': 'white-knight', 'C8': 'white-bishop', 'D8': 'white-king', 'E8': 'white-queen', 'F8': 'white-bishop', 'G8': 'white-knight', 'H8': 'white-rook'}, \n      },\n      situation: [],\n      movesHistory: [],\n      initialSetType: 'blacksOnTop'\n    }\n\n    this.recordMoves = this.recordMoves.bind(this);\n    this.updateSituation = this.updateSituation.bind(this);\n    this.findRankNumber = this.findRankNumber.bind(this);\n    this.findFileNumber = this.findFileNumber.bind(this);\n    this.updateSituationByMoveId = this.updateSituationByMoveId.bind(this);\n    this.loadSessionFromArchive = this.loadSessionFromArchive.bind(this);\n  }\n\n  findSquare(situation, coordinates) {\n    for (let row of situation) {\n      for (let square of row) {\n        if (square.coordinates === coordinates) {\n          return square;\n        }\n      }\n    }\n  }\n\n  findRankNumber(bySquareCoordinates) {\n    for (let i = 0; i < this.state.situation.length; i++) {\n      const row = this.state.situation[i];\n      for (let j = 0; j < row; j++) {\n        const square = row[j];\n        if (square.coordinates === bySquareCoordinates) {\n          return i;\n        }\n      }\n    }\n  }\n\n  findFileNumber(bySquareCoordinates) {\n    for (let i = 0; i < this.state.situation.length; i++) {\n      const row = this.state.situation[i];\n      for (let j = 0; j < row; j++) {\n        const square = row[j];\n        if (square.coordinates === bySquareCoordinates) {\n          return j;\n        }\n      }\n    }\n  }\n\n  copySituation(situation) {\n    let situationCopy = [];\n    for (let row of situation) {\n      let rowCopy = [];\n      for (let square of row) {\n        let squareCopy = {};\n        for (let key in square) {\n          squareCopy[key] = square[key];\n        }\n        rowCopy.push(squareCopy);\n      }\n      situationCopy.push(rowCopy);\n    }\n    return situationCopy;\n  }\n\n  copyMovesHistory(history) {\n    let historyCopy = [];\n    if (history.length > 0)\n      for (let entry of history) {\n        let entryCopy = {};\n        for (let key in entry) {\n          entryCopy[key] = entry[key];\n        }\n        historyCopy.push(entryCopy);\n      }\n    return historyCopy;\n  }\n\n  recordMoves(moves) {\n    let i = 0;\n    const self = this;\n    const reversedMoves = moves.slice().reverse();\n    function recordMove(move) {\n      self.setState(state => {\n        let situationCopy = self.copySituation(state.situation);\n        self.findSquare(situationCopy, move.from).piece = null;\n        const movedPiece = `${self.board.turnMap[move.side]}${self.board.piecesMap[move.piece]}`;\n        self.findSquare(situationCopy, move.to).piece = movedPiece;\n        let movesHistoryCopy = self.copyMovesHistory(state.movesHistory);\n        movesHistoryCopy.push({id: `${move.id}`, situation: situationCopy});\n        return {situation: situationCopy, movesHistory: movesHistoryCopy}\n      }, () => {\n        i++;\n        if (i < moves.length) \n          recordMove(reversedMoves[i]);\n      });\n    }\n    recordMove(reversedMoves[i]);\n  }\n\n  findSituation(moveId) {\n    for (let move of this.state.movesHistory)\n      if (move.id === moveId.toString())\n        return move.situation;\n  }\n\n  updateSituation(situation) {\n    this.setState({situation: situation});\n  }\n\n  updateSituationByMoveId(id) {\n    this.updateSituation(this.findSituation(id));\n  }\n\n  loadSessionFromArchive(movesHistory, moves) {\n    this.setState({movesHistory: movesHistory}, () => this.updateSituationByMoveId(moves[0].id));\n  }\n\n  render() {\n    return (\n      <div id=\"App\">\n        <Board board={this.board} \n               initialSet={this.state.initialSet}\n               initialSetType={this.state.initialSetType} \n               situation={this.state.situation}\n               updateSituation={this.updateSituation} />\n        <Panel side={this.state.turn}\n               recordMoves={this.recordMoves} \n               situation={this.state.situation}\n               movesHistory={this.state.movesHistory}\n               updateSituationByMoveId={this.updateSituationByMoveId}\n               loadSessionFromArchive={this.loadSessionFromArchive}\n               testRun={false} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}