{"ast":null,"code":"var _jsxFileName = \"/Users/iliyanvidev/Code/chess-move-parser/src/App.js\";\nimport React from 'react';\nimport Board from './Board';\nimport './App.css';\nimport Panel from './Panel';\nimport TurnIndicator from './TurnIndicator';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.board = {\n      vCoordinates: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'],\n      hCoordinates: ['8', '7', '6', '5', '4', '3', '2', '1']\n    };\n    this.state = {\n      turn: 'Whites'\n    };\n    this.makeMove = this.makeMove.bind(this);\n  }\n\n  makeMove(notation) {\n    const split = notation.split('');\n    const piece = split[0];\n    const from = split[1] + split[2];\n    const to = split[3] + split[4];\n    console.log(\"\".concat(piece, \" \").concat(from, \" \").concat(to));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Board, {\n      board: this.board,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(TurnIndicator, {\n      side: this.state.turn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Panel, {\n      side: this.state.turn,\n      makeMove: this.makeMove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/iliyanvidev/Code/chess-move-parser/src/App.js"],"names":["React","Board","Panel","TurnIndicator","App","Component","constructor","props","board","vCoordinates","hCoordinates","state","turn","makeMove","bind","notation","split","piece","from","to","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CADH;AAEXC,MAAAA,YAAY,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC;AAFH,KAAb;AAIA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAIA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDD,EAAAA,QAAQ,CAACE,QAAD,EAAW;AACjB,UAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAT,CAAe,EAAf,CAAd;AACA,UAAMC,KAAK,GAAGD,KAAK,CAAC,CAAD,CAAnB;AACA,UAAME,IAAI,GAAGF,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAA7B;AACA,UAAMG,EAAE,GAAGH,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAA3B;AACAI,IAAAA,OAAO,CAACC,GAAR,WAAeJ,KAAf,cAAwBC,IAAxB,cAAgCC,EAAhC;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKd,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAE,KAAKG,KAAL,CAAWC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAxB;AAA8B,MAAA,QAAQ,EAAE,KAAKC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AA9B+B;;AAiClC,eAAeT,GAAf","sourcesContent":["import React from 'react';\nimport Board from './Board';\nimport './App.css';\nimport Panel from './Panel';\nimport TurnIndicator from './TurnIndicator';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.board = {\n      vCoordinates: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'],\n      hCoordinates: ['8', '7', '6', '5', '4', '3', '2', '1']\n    }\n    this.state = {\n      turn: 'Whites'\n    }\n\n    this.makeMove = this.makeMove.bind(this);\n  }\n\n  makeMove(notation) {\n    const split = notation.split('');\n    const piece = split[0];\n    const from = split[1] + split[2];\n    const to = split[3] + split[4];\n    console.log(`${piece} ${from} ${to}`)\n  }\n\n  render() {\n    return (\n      <div id=\"App\">\n        <Board board={this.board} />\n        <TurnIndicator side={this.state.turn} />\n        <Panel side={this.state.turn} makeMove={this.makeMove} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}