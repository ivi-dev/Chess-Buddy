{"ast":null,"code":"import _defineProperty from\"/Users/iliyanvidev/Code/chess-buddy/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/iliyanvidev/Code/chess-buddy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/iliyanvidev/Code/chess-buddy/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/iliyanvidev/Code/chess-buddy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/iliyanvidev/Code/chess-buddy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/iliyanvidev/Code/chess-buddy/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/iliyanvidev/Code/chess-buddy/node_modules/@babel/runtime/helpers/esm/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';import NotationsInput from'./NotationsInput';import Buttons from'./Buttons';import SessionNameInput from'./SessionNameInput';import SessionsPanel from'./SessionsPanel';import'./Panel.css';import MovesHistory from'./MovesHistory';import Database from'./Database';var Panel=/*#__PURE__*/function(_React$Component){_inherits(Panel,_React$Component);function Panel(props){var _this;_classCallCheck(this,Panel);_this=_possibleConstructorReturn(this,_getPrototypeOf(Panel).call(this,props));_this.notationParams={notationMinLength:5,notationMaxLength:5};_this.db=null;_this.state={moves:[],notations:'',notaitionsError:'',dbError:'',panels:{sessionsPanel:{visible:false},saveSessionPanel:{visible:false}},sessions:[],sessionName:'',sessionNotes:'',confirm:true};_this.updateNotations=_this.updateNotations.bind(_assertThisInitialized(_this));_this.parseNotationsList=_this.parseNotationsList.bind(_assertThisInitialized(_this));_this.toggleSessionsPanel=_this.toggleSessionsPanel.bind(_assertThisInitialized(_this));_this.toggleSaveSessionPanel=_this.toggleSaveSessionPanel.bind(_assertThisInitialized(_this));_this.updateSessionName=_this.updateSessionName.bind(_assertThisInitialized(_this));_this.updateSessionNotes=_this.updateSessionNotes.bind(_assertThisInitialized(_this));_this.fadeOutMoves=_this.fadeOutMoves.bind(_assertThisInitialized(_this));_this.resetMovesFade=_this.resetMovesFade.bind(_assertThisInitialized(_this));_this.saveSession=_this.saveSession.bind(_assertThisInitialized(_this));_this.updateMoves=_this.updateMoves.bind(_assertThisInitialized(_this));_this.deleteSession=_this.deleteSession.bind(_assertThisInitialized(_this));return _this;}_createClass(Panel,[{key:\"componentDidMount\",value:function componentDidMount(){if(!this.props.testRun){this.db=new Database();this.db.configure(function(){console.log(\"DB_EVENT::There was a change in the local database. Something was inserted, removed or updated.\");},function(){console.log('DB_EVENT::There was an error during a database operation.');});this.updateSessionsList();}}},{key:\"updateNotations\",value:function updateNotations(event){this.setState({notaitionsError:''});this.setState({notations:event.target.value});}},{key:\"validateNotation\",value:function validateNotation(notation){var minLength=this.notationParams.notationMinLength,maxLength=this.notationParams.notationMaxLength;function checkLength(){return notation.length>=minLength&&notation.length<=maxLength;}function checkComposition(){return notation.match(/^[A-Z-a-z]{1}[A-Z-a-z]{1}\\d{1}[A-Za-z]{1}\\d{1}/i);}return checkLength()&&checkComposition();}},{key:\"generateId\",value:function generateId(collection){if(collection.length===0)return 1;else return collection[0].id+1;}},{key:\"capitalize\",value:function capitalize(notation){var split=notation.split('');var capitalizedSplit=[];split.forEach(function(letter,index){if(index===0)capitalizedSplit.push(letter.toUpperCase());else capitalizedSplit.push(letter.toLowerCase());});return capitalizedSplit.join('');}},{key:\"disectNotation\",value:function disectNotation(notation){var split=notation.split('');return{piece:split[0].toUpperCase(),from:(split[1]+split[2]).toUpperCase(),to:(split[3]+split[4]).toUpperCase()};}},{key:\"parseNotationsList\",value:function parseNotationsList(event){var _this2=this;event.preventDefault();if(this.state.notations.length>0){var notations=this.state.notations.trim().split(/\\n/);var allNotationsValid=true;var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=notations[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var _notation=_step.value;if(!this.validateNotation(_notation.replace(/\\s*/g,''))){allNotationsValid=false;this.setState({notaitionsError:\"Invalid notation: '\".concat(_notation,\"'\")});break;}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}if(allNotationsValid){var moves=[];var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=notations[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var notation=_step2.value;var prettyNotation=this.capitalize(notation.replace(/\\s*/g,''));var id=this.generateId(moves);var moveData=this.disectNotation(notation);var move={id:id,notation:prettyNotation,piece:moveData.piece,from:moveData.from,to:moveData.to,side:id%2===0?'Blacks':'Whites',faded:false};moves.unshift(move);}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return!=null){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}this.props.recordMoves(moves);this.setState({moves:moves},function(){return _this2.setState({notationsList:''});});}}else{this.setState({notaitionsError:'Nothing to parse.'});}}},{key:\"fadeOutMoves\",value:function fadeOutMoves(upwardsFromMove){this.setState(function(state){state.moves.forEach(function(move){if(move.id>upwardsFromMove)move.faded=true;else move.faded=false;});return{moves:state.moves};});}},{key:\"resetMovesFade\",value:function resetMovesFade(){this.setState(function(state){state.moves.forEach(function(move){return move.faded=false;});return{moves:state.moves};});}},{key:\"toggleSaveSessionPanel\",value:function toggleSaveSessionPanel(event){event.preventDefault();this.setState(function(state){return{panels:_objectSpread({},state.panels,{saveSessionPanel:{visible:!state.panels.saveSessionPanel.visible}}),dbError:''};});}},{key:\"toggleSessionsPanel\",value:function toggleSessionsPanel(){this.setState(function(state){return{panels:_objectSpread({},state.panels,{sessionsPanel:{visible:!state.panels.sessionsPanel.visible}})};});}},{key:\"updateSessionName\",value:function updateSessionName(event){this.setState({sessionName:event.target.value});}},{key:\"updateSessionNotes\",value:function updateSessionNotes(event){this.setState({sessionNotes:event.target.value});}},{key:\"getLatestSessionId\",value:function getLatestSessionId(){var id=0;this.state.sessions.forEach(function(session){if(session.id>id)id=session.id;});return id;}},{key:\"saveSession\",value:function saveSession(event){var _this3=this;event.preventDefault();if(!this.state.sessionName.trim()){this.setState({dbError:'Please, give your session a name first.'});return;}this.db.insert({id:this.getLatestSessionId()+1,_id:this.state.sessionName,notes:this.state.sessionNotes,moves_count:this.state.moves.length,moves:this.state.moves,moves_history:this.props.movesHistory,date_saved:Date()},function(){_this3.setState({sessionName:'',sessionNotes:''},function(){return _this3.toggleSaveSessionPanel();});_this3.updateSessionsList();},function(err){if(err.message==='Document update conflict'&&err.status===409)_this3.setState({dbError:\"Session '\".concat(_this3.state.sessionName,\"' already exists, choose another name.\")});});}},{key:\"updateSessionsList\",value:function updateSessionsList(){var _this4=this;function recreateSessions(dbResult){var sessions=[];dbResult.rows.forEach(function(row){sessions.push({id:row.doc.id,title:row.doc._id,movesHistory:row.doc.moves_history,moves:row.doc.moves});});return sessions;}this.db.getAll({include_docs:true},function(res){_this4.setState({sessions:recreateSessions(res)});});}},{key:\"updateMoves\",value:function updateMoves(moves){this.setState({moves:moves,panels:{sessionsPanel:{visible:false}}});}},{key:\"deleteSession\",value:function deleteSession(title){var _this5=this;this.db.delete(title,function(){_this5.updateSessionsList();});}},{key:\"render\",value:function render(){return React.createElement(\"aside\",{id:\"Panel\"},React.createElement(NotationsInput,{notations:this.state.notations,updateNotations:this.updateNotations,parseNotationsList:this.parseNotationsList}),this.state.notaitionsError&&React.createElement(\"div\",{id:\"Error\"},this.state.notaitionsError),this.state.moves.length!==0&&React.createElement(\"h3\",null,\"Session History\"),React.createElement(MovesHistory,{moves:this.state.moves,side:this.props.side,updateSituationByMoveId:this.props.updateSituationByMoveId,fadeOutMoves:this.fadeOutMoves,resetMovesFade:this.resetMovesFade}),React.createElement(Buttons,{toggleSessionsPanel:this.toggleSessionsPanel,toggleSaveSessionPanel:this.toggleSaveSessionPanel,moves:this.state.moves}),React.createElement(SessionNameInput,{visible:this.state.panels.saveSessionPanel.visible,toggleSaveSessionPanel:this.toggleSaveSessionPanel,sessionName:this.state.sessionName,sessionNotes:this.state.sessionNotes,updateSessionName:this.updateSessionName,updateSessionNotes:this.updateSessionNotes,saveSession:this.saveSession,dbError:this.state.dbError}),React.createElement(SessionsPanel,{visible:this.state.panels.sessionsPanel.visible,sessions:this.state.sessions,toggleSessionsPanel:this.toggleSessionsPanel,loadSessionFromArchive:this.props.loadSessionFromArchive,updateMoves:this.updateMoves,deleteSession:this.deleteSession,confirm:this.state.confirm}));}}]);return Panel;}(React.Component);export default Panel;","map":{"version":3,"sources":["/Users/iliyanvidev/Code/chess-buddy/src/Panel.js"],"names":["React","NotationsInput","Buttons","SessionNameInput","SessionsPanel","MovesHistory","Database","Panel","props","notationParams","notationMinLength","notationMaxLength","db","state","moves","notations","notaitionsError","dbError","panels","sessionsPanel","visible","saveSessionPanel","sessions","sessionName","sessionNotes","confirm","updateNotations","bind","parseNotationsList","toggleSessionsPanel","toggleSaveSessionPanel","updateSessionName","updateSessionNotes","fadeOutMoves","resetMovesFade","saveSession","updateMoves","deleteSession","testRun","configure","console","log","updateSessionsList","event","setState","target","value","notation","minLength","maxLength","checkLength","length","checkComposition","match","collection","id","split","capitalizedSplit","forEach","letter","index","push","toUpperCase","toLowerCase","join","piece","from","to","preventDefault","trim","allNotationsValid","validateNotation","replace","prettyNotation","capitalize","generateId","moveData","disectNotation","move","side","faded","unshift","recordMoves","notationsList","upwardsFromMove","session","insert","getLatestSessionId","_id","notes","moves_count","moves_history","movesHistory","date_saved","Date","err","message","status","recreateSessions","dbResult","rows","row","doc","title","getAll","include_docs","res","delete","updateSituationByMoveId","loadSessionFromArchive","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NotationsInput from './NotationsInput'\nimport Buttons from './Buttons'\nimport SessionNameInput from './SessionNameInput'\nimport SessionsPanel from './SessionsPanel'\nimport './Panel.css';\nimport MovesHistory from './MovesHistory';\nimport Database from './Database';\n\nclass Panel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.notationParams ={\n            notationMinLength: 5,\n            notationMaxLength: 5\n        }\n        this.db = null;\n        this.state = {\n            moves: [],\n            notations: '',\n            notaitionsError: '',\n            dbError: '',\n            panels: {\n                sessionsPanel: {visible: false},\n                saveSessionPanel: {visible: false}\n            },\n            sessions: [],\n            sessionName: '',\n            sessionNotes: '',\n            confirm: true\n        }\n        this.updateNotations = this.updateNotations.bind(this);\n        this.parseNotationsList = this.parseNotationsList.bind(this);\n        this.toggleSessionsPanel = this.toggleSessionsPanel.bind(this);\n        this.toggleSaveSessionPanel = this.toggleSaveSessionPanel.bind(this);\n        this.updateSessionName = this.updateSessionName.bind(this);\n        this.updateSessionNotes = this.updateSessionNotes.bind(this);\n        this.fadeOutMoves = this.fadeOutMoves.bind(this);\n        this.resetMovesFade = this.resetMovesFade.bind(this);\n        this.saveSession = this.saveSession.bind(this);\n        this.updateMoves = this.updateMoves.bind(this);\n        this.deleteSession = this.deleteSession.bind(this);\n    }\n\n    componentDidMount() {\n        if (!this.props.testRun) {\n            this.db = new Database();\n            this.db.configure(() => {console.log(`DB_EVENT::There was a change in the local database. Something was inserted, removed or updated.`)},\n                            () => {console.log('DB_EVENT::There was an error during a database operation.');});\n            this.updateSessionsList();\n        }\n    }\n\n    updateNotations(event) {\n        this.setState({notaitionsError: ''});\n        this.setState({notations: event.target.value});\n    }\n\n    validateNotation(notation) {\n        const minLength = this.notationParams.notationMinLength, maxLength = this.notationParams.notationMaxLength;\n        function checkLength() {\n            return notation.length >= minLength && notation.length <= maxLength;\n        }\n        function checkComposition() {\n            return notation.match(/^[A-Z-a-z]{1}[A-Z-a-z]{1}\\d{1}[A-Za-z]{1}\\d{1}/i);\n        }\n        return checkLength() && checkComposition();\n    }\n\n    generateId(collection) {\n        if (collection.length === 0)\n            return 1;\n        else\n            return collection[0].id + 1;\n    }\n\n    capitalize(notation) {\n        const split = notation.split('');\n        let capitalizedSplit = [];\n        split.forEach((letter, index) => {if (index === 0) capitalizedSplit.push(letter.toUpperCase())\n                                          else capitalizedSplit.push(letter.toLowerCase())});\n        return capitalizedSplit.join('');\n    }\n\n    disectNotation(notation) {\n        const split = notation.split('');\n        return {piece: split[0].toUpperCase(), from: (split[1] + split[2]).toUpperCase(), \n                to: (split[3] + split[4]).toUpperCase()};\n    }\n\n    parseNotationsList(event) {\n        event.preventDefault();\n        if (this.state.notations.length > 0) {\n            const notations = this.state.notations.trim().split(/\\n/);\n            let allNotationsValid = true;\n            for (let notation of notations)\n                if (!this.validateNotation(notation.replace(/\\s*/g, ''))) {\n                    allNotationsValid = false;\n                    this.setState({notaitionsError: `Invalid notation: '${notation}'`});\n                    break;\n                }\n            if (allNotationsValid) {\n                let moves = [];\n                for (let notation of notations) {\n                    const prettyNotation = this.capitalize(notation.replace(/\\s*/g, ''));\n                    const id = this.generateId(moves);\n                    const moveData = this.disectNotation(notation);\n                    const move = {id: id, notation: prettyNotation, piece: moveData.piece,\n                                  from: moveData.from, to: moveData.to,\n                                  side: id % 2 === 0 ? 'Blacks' : 'Whites', \n                                  faded: false};\n                    moves.unshift(move);\n                }\n                this.props.recordMoves(moves);\n                this.setState({moves: moves}, () => this.setState({notationsList: ''}));\n            }\n        } else {\n            this.setState({notaitionsError: 'Nothing to parse.'});\n        }\n    }\n\n    fadeOutMoves(upwardsFromMove) {\n        this.setState(state => {\n            state.moves.forEach(move => {\n                if (move.id > upwardsFromMove) move.faded = true; \n                else move.faded = false;\n            });\n            return {moves: state.moves}\n        });\n    }\n\n    resetMovesFade() {\n        this.setState(state => {\n            state.moves.forEach(move => move.faded = false);\n            return {moves: state.moves}\n        });\n    }\n\n    toggleSaveSessionPanel(event) {\n        event.preventDefault();\n        this.setState(state => ({panels: {...state.panels, saveSessionPanel: {visible: !state.panels.saveSessionPanel.visible}}, dbError: ''}));\n    }\n\n    toggleSessionsPanel() {\n        this.setState(state => ({panels: {...state.panels, sessionsPanel: {visible: !state.panels.sessionsPanel.visible}}}));\n    }\n\n    updateSessionName(event) {\n        this.setState({sessionName: event.target.value});\n    }\n\n    updateSessionNotes(event) {\n        this.setState({sessionNotes: event.target.value});\n    }\n\n    getLatestSessionId() {\n        let id = 0;\n        this.state.sessions.forEach(session => {\n            if (session.id > id) id = session.id;\n        });\n        return id;\n    }\n\n    saveSession(event) {\n        event.preventDefault();\n        if (!this.state.sessionName.trim()) {\n            this.setState({dbError: 'Please, give your session a name first.'});\n            return;\n        }\n        this.db.insert({id: this.getLatestSessionId() + 1, \n                        _id: this.state.sessionName, \n                        notes: this.state.sessionNotes, \n                        moves_count: this.state.moves.length, \n                        moves: this.state.moves,\n                        moves_history: this.props.movesHistory,\n                        date_saved: Date()},\n                        () => {\n                            this.setState({sessionName: '', sessionNotes: ''}, () => this.toggleSaveSessionPanel()); \n                            this.updateSessionsList()\n                        }, (err) => {\n                            if (err.message === 'Document update conflict' && err.status === 409) \n                                this.setState({dbError: `Session '${this.state.sessionName}' already exists, choose another name.`});\n                            });\n    }\n\n    updateSessionsList() {\n        function recreateSessions(dbResult) {\n            let sessions = [];\n            dbResult.rows.forEach(row => {\n                sessions.push({id: row.doc.id, \n                               title: row.doc._id, \n                               movesHistory: row.doc.moves_history, \n                               moves: row.doc.moves});\n            });\n            return sessions;\n        }\n        this.db.getAll({include_docs: true}, res => {\n            this.setState({sessions: recreateSessions(res)});\n        });\n    }\n\n    updateMoves(moves) {\n        this.setState({moves: moves, panels: {sessionsPanel: {visible: false}}});\n    }\n\n    deleteSession(title) {\n        this.db.delete(title, () => {this.updateSessionsList()});\n    }\n\n    render() {\n        return (\n            <aside id=\"Panel\">\n                <NotationsInput notations={this.state.notations} \n                                updateNotations={this.updateNotations} \n                                parseNotationsList={this.parseNotationsList} />\n                {this.state.notaitionsError && <div id=\"Error\">{this.state.notaitionsError}</div>}\n                {this.state.moves.length !== 0 && <h3>Session History</h3>}\n                <MovesHistory moves={this.state.moves} \n                              side={this.props.side} \n                              updateSituationByMoveId={this.props.updateSituationByMoveId} \n                              fadeOutMoves={this.fadeOutMoves} \n                              resetMovesFade={this.resetMovesFade} />\n                <Buttons toggleSessionsPanel={this.toggleSessionsPanel} \n                         toggleSaveSessionPanel={this.toggleSaveSessionPanel} \n                         moves={this.state.moves} />\n                <SessionNameInput visible={this.state.panels.saveSessionPanel.visible} \n                                  toggleSaveSessionPanel={this.toggleSaveSessionPanel} \n                                  sessionName={this.state.sessionName} \n                                  sessionNotes={this.state.sessionNotes} \n                                  updateSessionName={this.updateSessionName} \n                                  updateSessionNotes={this.updateSessionNotes} \n                                  saveSession={this.saveSession}\n                                  dbError={this.state.dbError} />\n                <SessionsPanel visible={this.state.panels.sessionsPanel.visible} \n                               sessions={this.state.sessions} \n                               toggleSessionsPanel={this.toggleSessionsPanel} \n                               loadSessionFromArchive={this.props.loadSessionFromArchive} \n                               updateMoves={this.updateMoves} \n                               deleteSession={this.deleteSession}\n                               confirm={this.state.confirm} />\n            </aside>\n        );\n    }\n}\n\nexport default Panel;"]},"metadata":{},"sourceType":"module"}